name: CI
on:
  push:
    branches:
      - '*'
    paths-ignore:
      - '.gitignore'
      - '**.md'
      - 'LICENSE'
      - '.github/dependabot.yml'

  pull_request:
    branches:
      - '*'
    paths-ignore:
      - '.gitignore'
      - '**.md'
      - 'LICENSE'
      - '.github/dependabot.yml'

jobs:

  perf-run:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:

          - name: "2-tomcats"
            env: |
              TOMCAT_COUNT=2
              HTTPD_LOG_LEVEL=debug

          - name: "2-tomcats-1-shutdown"
            env: |
              TOMCAT_COUNT=2
              SHUTDOWN_RANDOMLY=1
              HTTPD_LOG_LEVEL=debug

          - name: "15-tomcats-15-disable"
            env: |
              TOMCAT_COUNT=15
              HTTPD_LOG_LEVEL=debug
              DISABLE_RANDOMLY=15

          - name: "20-tomcats-15-disable"
            env: |
              TOMCAT_COUNT=20
              HTTPD_LOG_LEVEL=debug
              DISABLE_RANDOMLY=15

          - name: "20-tomcats"
            env: |
              TOMCAT_COUNT=20

          - name: "20-tomcats-10-shutdown"
            env: |
              TOMCAT_COUNT=20
              SHUTDOWN_RANDOMLY=10

          - name: "50-tomcats"
            env: |
              TOMCAT_COUNT=50

          - name: "50-tomcats-30-shutdown"
            env: |
              TOMCAT_COUNT=50
              SHUTDOWN_RANDOMLY=30

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Checkout submodules
        run: git submodule update --init --recursive
      - name: Set environment variables
        run: echo "${{ matrix.env }}" >> $GITHUB_ENV
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
      - name: Get dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install moby-engine moby-cli gcc maven git curl iproute2 wcstools g++-12 cmake liblist-moreutils-perl
      - name: Setup  performance tests
        run: sh setup.sh
      - name: Run performance tests
        run: sh run.sh
      - name: Make a summary of test runs
        run: |
          perl summary.pl output/ | tee summary && cp summary output/summary-for-${{ matrix.name }}
      - name: Preserve output
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Output-for-${{ matrix.name }}
          path: output/*

